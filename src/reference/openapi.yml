openapi: 3.0.0
info:
  title: AppQualityApi
  version: '1.0'
  description: An API to get all data for your bugfinding and ux research needs!
  contact:
    name: Developers
    email: it@app-quality.com
servers:
  - url: 'https://api.app-quality.com'
paths:
  /:
    get:
      summary: Get API description
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value: {}
      operationId: get-root
      description: Get all routes available for this apis
    parameters: []
  /authenticate:
    post:
      description: A request to login with your username and password
      summary: Authenticate to the API
      operationId: post-authenticate
      responses:
        '200':
          $ref: '#/components/responses/Authentication'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              examples:
                example-1:
                  value: string
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
            examples:
              example:
                value:
                  username: Elon71
                  password: my-strong-password
        description: A JSON containing username and password
      parameters: []
  /projects: {}
  /users/me:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                required:
                  - id
                  - name
              examples:
                Example 1:
                  value:
                    id: 123
                    name: Pippo
      operationId: get-users-me
      security:
        - JWT: []
  /questions: {}
  /attempts:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    date:
                      type: string
                    time:
                      type: string
                    errors:
                      type: number
                  required:
                    - id
                    - date
                    - time
                    - errors
      operationId: get-attempts
      security:
        - JWT: []
    post:
      summary: ''
      operationId: post-attempts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  startTime:
                    type: string
                    format: date-time
                  questions:
                    type: array
                    items:
                      allOf:
                        - properties:
                            title:
                              type: string
                          required:
                            - title
                        - oneOf:
                            - properties:
                                type:
                                  type: string
                                  enum:
                                    - dropdown
                                options:
                                  type: array
                                  items:
                                    type: string
                                slug:
                                  $ref: '#/components/schemas/SelectQuestionSlug'
                              required:
                                - type
                                - options
                                - slug
                            - properties:
                                type:
                                  type: string
                                  enum:
                                    - text
                                slug:
                                  $ref: '#/components/schemas/TextQuestionSlug'
                              required:
                                - type
                                - slug
                      type: object
                required:
                  - id
                  - startTime
                  - questions
              examples:
                Example 1:
                  value:
                    id: 123
                    startTime: '2019-08-24T14:15:22Z'
                    questions:
                      - type: dropdown
                        slug: email
                        title: Seleziona l'indirizzo email del partecipante (pippo@franco.me)
                        options:
                          - pippo@franco.me
                          - ezio@greggio.me
                          - papa@francesco.me
                      - type: dropdown
                        slug: month-vocals
                        title: Seleziona le vocali del mese della data odierna (ao)
                        options:
                          - eaio
                          - ao
                          - aie
                          - aio
                          - iuo
                          - uio
                          - aoo
                          - eee
                          - ooe
                          - iee
                      - type: dropdown
                        slug: last-numbers-bando
                        title: Seleziona le ultime 2 cifre del bando (22)
                        options:
                          - '21'
                          - '22'
                          - '19'
                          - '20'
                          - '23'
                      - type: dropdown
                        slug: bando
                        title: Seleziona il bando al quale stai partecipando (bando inail 2022)
                        options:
                          - bando inail 2021
                          - bando inail 2022
                          - bando inail 2023
                          - bando altro 2023
                          - bando inail 2019
                          - bando inail 2020
                      - type: dropdown
                        slug: amount
                        title: Seleziona l'importo dello stanziamento del bando (1€)
                        options:
                          - 1€
                          - 2€
                          - 3€
                          - 4€
                          - 5€
                          - 6€
                          - 7€
                          - 8€
                      - type: dropdown
                        slug: axis
                        title: Seleziona il numero degli assi di finanziamento (123)
                        options:
                          - '123'
                          - '456'
                          - '789'
                          - '012'
                          - '412'
                          - '892'
                      - type: dropdown
                        slug: moment-date
                        title: Seleziona la data del momento 1 (22/01/2023)
                        options:
                          - 22/01/2023
                          - 23/01/2023
                          - 24/01/2023
                          - 25/01/2023
                          - 26/01/2023
                      - type: text
                        slug: today
                        title: Inserisci la data di oggi nel formato DD/MM/YYYY
                      - type: text
                        slug: first-characters
                        title: Inserisci i primi 5 caratteri del codice alfanumerico
      description: ''
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
              required:
                - code
            examples:
              Example 1:
                value:
                  code: '-6c9105e31b7d678349ad7b059ef1ebbd4ae610c26c5b70c2bbdea528173d2b03'
  '/attempts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: ''
      operationId: post-attempts-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  elapsedTime:
                    type: string
                  success:
                    type: boolean
                  wrongAnswers:
                    type: array
                    items:
                      type: object
                      properties:
                        slug:
                          oneOf:
                            - $ref: '#/components/schemas/SelectQuestionSlug'
                            - $ref: '#/components/schemas/TextQuestionSlug'
                        yourAnswer:
                          type: string
                        correctAnswer:
                          type: string
                      required:
                        - slug
                        - yourAnswer
                        - correctAnswer
                required:
                  - elapsedTime
                  - success
              examples:
                Example 1:
                  value:
                    elapsedTime: '1200'
                    success: false
                    wrongAnswers:
                      - slug: email
                        yourAnswer: mario@rossi.me
                        correctAnswer: pippo@franco.me
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  slug:
                    type: string
                  answer:
                    type: string
                required:
                  - slug
                  - answer
components:
  schemas:
    Authentication:
      title: Authentication
      type: object
      description: ''
      x-examples:
        example-1:
          value:
            username: string
            name: string
            surname: string
            email: user@example.com
            image: 'http://example.com'
            id: 0
            wp_user_id: 0
            role: string
            is_verified: true
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        role:
          type: string
        name:
          type: string
        picture:
          type: string
        token:
          type: string
        iat:
          type: number
        exp:
          type: number
      required:
        - id
        - email
        - role
        - name
        - token
    Error:
      title: Error
      type: object
      properties:
        message:
          type: string
        code:
          type: number
        error:
          type: boolean
      required:
        - message
        - code
        - error
    User:
      title: User
      type: object
      description: ''
      properties:
        username:
          type: string
        name:
          type: string
        surname:
          type: string
        email:
          type: string
          format: email
        image:
          type: string
          format: uri
        id:
          type: integer
        wp_user_id:
          type: integer
        role:
          type: string
        is_verified:
          type: boolean
      x-examples:
        example-1:
          value:
            username: string
            name: string
            surname: string
            email: user@example.com
            image: 'http://example.com'
            id: 0
            wp_user_id: 0
            role: string
            is_verified: true
    Project:
      title: Project
      type: object
      x-examples:
        example-1:
          name: string
          campaigns:
            - name: string
              customer_title: string
              internal_id: string
              dates:
                start: string
                end: string
                close: string
              status: true
              language: string
              public: true
              hasBugParade: true
              devices:
                - id: string
              minNumberOfMedia: 0
              titleRule: true
              allowed:
                severities:
                  - id: string
                bug_types:
                  - id: string
                replicabilities:
                  - id: string
              projectManager:
                id: 0
                name: string
              customerCanViewReviewing: true
              additionalFields:
                - id: string
              id: 0
      properties:
        name:
          type: string
    SelectQuestionSlug:
      oneOf:
        - enum:
            - email
            - bando
            - last-numbers-bando
        - enum:
            - month-vocals
            - amount
            - axis
        - enum:
            - moment-date
      type: string
      x-examples: {}
    TextQuestionSlug:
      oneOf:
        - enum:
            - today
            - tomorrow
            - yesterday
        - enum:
            - first-characters
            - first-numbers
        - enum:
            - last-characters
            - last-numbers
      type: string
      x-examples: {}
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      description: ''
  responses:
    Error:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UserData:
      description: A user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          examples:
            example:
              value:
                username: Elon71
    Authentication:
      description: Authentication data. The token can be used to authenticate the protected requests
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: number
              firstName:
                type: string
              lastName:
                type: string
              token:
                type: string
              username:
                type: string
              iat:
                type: number
              exp:
                type: number
          examples:
            example:
              value:
                id: 42
                firstName: Elon
                lastName: Musk
                token: my-jwt-token
                username: Elon71
    NotFound:
      description: An error due to the resource not existing
      content:
        application/json:
          schema:
            type: object
            properties:
              element:
                type: string
              id:
                type: integer
              message:
                type: string
            required:
              - element
              - id
              - message
          examples:
            example-1:
              value:
                element: campaign
                id: 1
                message: No campaign with id 1
    MissingParameters:
      description: An error due to missing required parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
          examples:
            example:
              value:
                message: Missing parameters
    NotAuthorized:
      description: An error due to insufficient authorization to access the resource
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            example:
              value:
                message: Not Authorized.
  parameters:
    campaign:
      name: campaign
      in: path
      required: true
      schema:
        type: string
      description: A campaign id
    task:
      name: task
      in: path
      required: true
      schema:
        type: string
      description: A task id
    customer:
      name: customer
      in: path
      required: true
      schema:
        type: string
      description: A customer id
    project:
      name: project
      in: path
      required: true
      schema:
        type: string
      description: A project id
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
      description: Max items to retrieve
    start:
      name: start
      in: query
      required: false
      schema:
        type: integer
      description: Items to skip for pagination
    filterBy:
      name: filterBy
      in: query
      required: false
      schema:
        type: object
      description: Key-value Array for item filtering
    order:
      name: order
      in: query
      required: false
      schema:
        type: string
        enum:
          - ASC
          - DESC
        default: DESC
      description: 'How to order values (ASC, DESC)'
    locale:
      name: locale
      in: query
      required: false
      schema:
        type: string
        enum:
          - en
          - it
        default: en
      description: How to localize values
    searchBy:
      name: searchBy
      in: query
      schema:
        type: string
      description: A comma separated list of fields which will be searched
    search:
      name: search
      in: query
      required: false
      schema:
        type: string
      description: The value to search for
  examples: {}
tags:
  - name: Authentication
  - name: Campaign
  - name: Customer
  - name: Projects
  - name: Task
  - name: User
  - name: Admin
  - name: Devices

openapi: 3.0.0
info:
  title: AppQualityApi
  version: '1.0'
  description: An API to get all data for your bugfinding and ux research needs!
  contact:
    name: Developers
    email: it@app-quality.com
servers:
  - url: 'https://api.app-quality.com'
paths:
  /:
    get:
      summary: Get API description
      tags:
        - Info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value: {}
      operationId: get-root
      description: Get all routes available for this apis
    parameters: []
  /authenticate:
    post:
      description: A request to login with your username and password
      summary: Authenticate to the API
      operationId: post-authenticate
      responses:
        '200':
          $ref: '#/components/responses/Authentication'
        '401':
          $ref: '#/components/responses/NotAuthorized'
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
            examples:
              example:
                value:
                  username: Elon71
                  password: my-strong-password
        description: A JSON containing username and password
      parameters: []
  /users/me:
    get:
      summary: Your GET endpoint
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                required:
                  - id
                  - name
              examples:
                Example 1:
                  value:
                    id: 123
                    name: Pippo
      operationId: get-users-me
      security:
        - JWT: []
      description: Get logged user data
  /attempts:
    get:
      summary: Get all attemtps
      tags:
        - Attempts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    date:
                      type: string
                    time:
                      type: string
                    errors:
                      type: number
                  required:
                    - id
                    - date
                    - time
                    - errors
      operationId: get-attempts
      security:
        - JWT: []
      description: Get all attempts of logged user
    post:
      summary: Start an attempt
      operationId: post-attempts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  startTime:
                    type: string
                    format: date-time
                  questions:
                    type: array
                    items:
                      allOf:
                        - properties:
                            title:
                              type: string
                          required:
                            - title
                        - oneOf:
                            - properties:
                                type:
                                  type: string
                                  enum:
                                    - dropdown
                                options:
                                  type: array
                                  items:
                                    type: string
                                slug:
                                  $ref: '#/components/schemas/SelectQuestionSlug'
                              required:
                                - type
                                - options
                                - slug
                            - properties:
                                type:
                                  type: string
                                  enum:
                                    - text
                                slug:
                                  $ref: '#/components/schemas/TextQuestionSlug'
                              required:
                                - type
                                - slug
                      type: object
                required:
                  - id
                  - startTime
                  - questions
              examples:
                Example 1:
                  value:
                    id: 123
                    startTime: '2019-08-24T14:15:22Z'
                    questions:
                      - type: dropdown
                        slug: email
                        title: Seleziona l'indirizzo email del partecipante (pippo@franco.me)
                        options:
                          - pippo@franco.me
                          - ezio@greggio.me
                          - papa@francesco.me
                      - type: dropdown
                        slug: month-vocals
                        title: Seleziona le vocali del mese della data odierna (ao)
                        options:
                          - eaio
                          - ao
                          - aie
                          - aio
                          - iuo
                          - uio
                          - aoo
                          - eee
                          - ooe
                          - iee
                      - type: dropdown
                        slug: last-numbers-bando
                        title: Seleziona le ultime 2 cifre del bando (22)
                        options:
                          - '21'
                          - '22'
                          - '19'
                          - '20'
                          - '23'
                      - type: dropdown
                        slug: bando
                        title: Seleziona il bando al quale stai partecipando (bando inail 2022)
                        options:
                          - bando inail 2021
                          - bando inail 2022
                          - bando inail 2023
                          - bando altro 2023
                          - bando inail 2019
                          - bando inail 2020
                      - type: dropdown
                        slug: amount
                        title: Seleziona l'importo dello stanziamento del bando (1€)
                        options:
                          - 1€
                          - 2€
                          - 3€
                          - 4€
                          - 5€
                          - 6€
                          - 7€
                          - 8€
                      - type: dropdown
                        slug: axis
                        title: Seleziona il numero degli assi di finanziamento (123)
                        options:
                          - '123'
                          - '456'
                          - '789'
                          - '012'
                          - '412'
                          - '892'
                      - type: dropdown
                        slug: moment-date
                        title: Seleziona la data del momento 1 (22/01/2023)
                        options:
                          - 22/01/2023
                          - 23/01/2023
                          - 24/01/2023
                          - 25/01/2023
                          - 26/01/2023
                      - type: text
                        slug: today
                        title: Inserisci la data di oggi nel formato DD/MM/YYYY
                      - type: text
                        slug: first-characters
                        title: Inserisci i primi 5 caratteri del codice alfanumerico
        '403':
          $ref: '#/components/responses/Error'
      description: Create a new attempt from a code
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
              required:
                - code
            examples:
              Example 1:
                value:
                  code: '-6c9105e31b7d678349ad7b059ef1ebbd4ae610c26c5b70c2bbdea528173d2b03'
      tags:
        - Attempts
  '/attempts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Complete an attempt
      operationId: post-attempts-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  elapsedTime:
                    type: string
                  success:
                    type: boolean
                  wrongAnswers:
                    type: array
                    items:
                      type: object
                      properties:
                        slug:
                          oneOf:
                            - $ref: '#/components/schemas/SelectQuestionSlug'
                            - $ref: '#/components/schemas/TextQuestionSlug'
                        yourAnswer:
                          type: string
                        correctAnswer:
                          type: string
                      required:
                        - slug
                        - yourAnswer
                        - correctAnswer
                required:
                  - elapsedTime
                  - success
              examples:
                Example 1:
                  value:
                    elapsedTime: '1200'
                    success: false
                    wrongAnswers:
                      - slug: email
                        yourAnswer: mario@rossi.me
                        correctAnswer: pippo@franco.me
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  slug:
                    oneOf:
                      - $ref: '#/components/schemas/SelectQuestionSlug'
                      - $ref: '#/components/schemas/TextQuestionSlug'
                  answer:
                    type: string
                required:
                  - slug
                  - answer
            examples: {}
      tags:
        - Attempts
      description: Complete an attempt with a list of answers
components:
  schemas:
    SelectQuestionSlug:
      oneOf:
        - enum:
            - email
            - bando
            - last-numbers-bando
        - enum:
            - month-vocals
            - amount
            - axis
        - enum:
            - moment-date
      type: string
      x-examples: {}
    TextQuestionSlug:
      oneOf:
        - enum:
            - today
            - tomorrow
            - yesterday
        - enum:
            - first-characters
            - first-numbers
        - enum:
            - last-characters
            - last-numbers
      type: string
      x-examples: {}
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      description: ''
  responses:
    Authentication:
      description: Authentication data. The token can be used to authenticate the protected requests
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: number
              firstName:
                type: string
              lastName:
                type: string
              token:
                type: string
              username:
                type: string
              iat:
                type: number
              exp:
                type: number
          examples:
            example:
              value:
                id: 42
                firstName: Elon
                lastName: Musk
                token: my-jwt-token
                username: Elon71
    NotAuthorized:
      description: An error due to insufficient authorization to access the resource
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            example:
              value:
                message: Not Authorized.
    Error:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              code:
                type: number
              error:
                type: boolean
            required:
              - message
              - code
              - error
  parameters: {}
  examples: {}
tags:
  - name: Authentication
  - name: Campaign
  - name: Customer
  - name: Projects
  - name: Task
  - name: User
  - name: Admin
  - name: Devices
  - name: Info
  - name: Attempts
